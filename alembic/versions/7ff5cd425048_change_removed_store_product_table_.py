"""(change) removed store product table -> merged to sub plan table

Revision ID: 7ff5cd425048
Revises: f2e8f573f91f
Create Date: 2024-12-18 14:57:38.096414

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7ff5cd425048'
down_revision: Union[str, None] = 'f2e8f573f91f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 1. 먼저 foreign key constraint 제거
    op.drop_constraint(
        'user_subscription_store_product_id_fkey',
        'user_subscription',
        type_='foreignkey'
    )
    op.drop_table('store_product')
    op.add_column('subscription_plan', sa.Column('store_type', sa.Enum('APP_STORE', 'PLAY_STORE', name='storetype'), nullable=True))
    op.add_column('subscription_plan', sa.Column('product_id', sa.String(), nullable=True))
    op.add_column('user', sa.Column('timezone', sa.String(length=20), nullable=True))
    op.add_column('user_subscription', sa.Column('subscription_plan_id', sa.Integer(), nullable=False))
    op.drop_index('ix_user_subscription_store_product_id', table_name='user_subscription')
    op.create_index(op.f('ix_user_subscription_subscription_plan_id'), 'user_subscription', ['subscription_plan_id'], unique=True)
    op.create_foreign_key(None, 'user_subscription', 'subscription_plan', ['subscription_plan_id'], ['id'])
    op.drop_column('user_subscription', 'store_product_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user_subscription', sa.Column('store_product_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'user_subscription', type_='foreignkey')
    op.create_foreign_key('user_subscription_store_product_id_fkey', 'user_subscription', 'store_product', ['store_product_id'], ['id'])
    op.drop_index(op.f('ix_user_subscription_subscription_plan_id'), table_name='user_subscription')
    op.create_index('ix_user_subscription_store_product_id', 'user_subscription', ['store_product_id'], unique=True)
    op.drop_column('user_subscription', 'subscription_plan_id')
    op.drop_column('user', 'timezone')
    op.drop_column('subscription_plan', 'product_id')
    op.drop_column('subscription_plan', 'store_type')
    op.create_table('store_product',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('store_type', postgresql.ENUM('APP_STORE', 'PLAY_STORE', name='storetype'), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subscription_plan_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['subscription_plan_id'], ['subscription_plan.id'], name='store_product_subscription_plan_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='store_product_pkey'),
    sa.UniqueConstraint('subscription_plan_id', 'store_type', name='uix_plan_store')
    )
    # ### end Alembic commands ###
